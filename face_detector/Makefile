#############################################################################
# Makefile for building: face_detector
# Generated by qmake (2.01a) (Qt 4.8.4) on: Sun Feb 2 20:05:37 2014
# Project:  face_detector.pro
# Template: app
# Command: /usr/bin/qmake-qt4 -spec /usr/share/qt4/mkspecs/linux-g++-64 -o Makefile face_detector.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_NETWORK_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -m64 -pipe -O2 -D_REENTRANT -Wall -W $(DEFINES)
CXXFLAGS      = -m64 -pipe -O2 -D_REENTRANT -Wall -W $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++-64 -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtNetwork -I/usr/include/qt4/QtGui -I/usr/include/qt4 -I/usr/include/opencv2 -I.
LINK          = g++
LFLAGS        = -m64 -Wl,-O1
LIBS          = $(SUBLIBS)  -L/usr/lib/x86_64-linux-gnu /usr/lib/libopencv*.so /usr/lib/libQtWebsocket.a -lQtGui -lQtNetwork -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake-qt4
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = myrecognizer.cpp \
		facedetectapp.cpp \
		mvt_detection.cpp \
		myqtgui.cpp \
		colordetector.cpp \
		contourdetector.cpp \
		interestzone.cpp \
		Websocketserver.cpp \
		Client.cpp \
		main.cpp \
		myevents.cpp \
		usergui.cpp moc_facedetectapp.cpp \
		moc_myqtgui.cpp \
		moc_Websocketserver.cpp \
		moc_QWsSocket.cpp \
		moc_QWsServer.cpp \
		moc_QTlsServer.cpp \
		moc_Client.cpp
OBJECTS       = myrecognizer.o \
		facedetectapp.o \
		mvt_detection.o \
		myqtgui.o \
		colordetector.o \
		contourdetector.o \
		interestzone.o \
		Websocketserver.o \
		Client.o \
		main.o \
		myevents.o \
		usergui.o \
		moc_facedetectapp.o \
		moc_myqtgui.o \
		moc_Websocketserver.o \
		moc_QWsSocket.o \
		moc_QWsServer.o \
		moc_QTlsServer.o \
		moc_Client.o
DIST          = /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		face_detector.pro
QMAKE_TARGET  = face_detector
DESTDIR       = 
TARGET        = face_detector

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: face_detector.pro  /usr/share/qt4/mkspecs/linux-g++-64/qmake.conf /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/x86_64-linux-gnu/libQtGui.prl \
		/usr/lib/x86_64-linux-gnu/libQtNetwork.prl \
		/usr/lib/x86_64-linux-gnu/libQtCore.prl
	$(QMAKE) -spec /usr/share/qt4/mkspecs/linux-g++-64 -o Makefile face_detector.pro
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/common/gcc-base.conf:
/usr/share/qt4/mkspecs/common/gcc-base-unix.conf:
/usr/share/qt4/mkspecs/common/g++-base.conf:
/usr/share/qt4/mkspecs/common/g++-unix.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/x86_64-linux-gnu/libQtGui.prl:
/usr/lib/x86_64-linux-gnu/libQtNetwork.prl:
/usr/lib/x86_64-linux-gnu/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -spec /usr/share/qt4/mkspecs/linux-g++-64 -o Makefile face_detector.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/face_detector1.0.0 || $(MKDIR) .tmp/face_detector1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/face_detector1.0.0/ && $(COPY_FILE) --parents myrecognizer.hpp mainHeader.hpp facedetectapp.h mvt_detection.h myqtgui.h colordetector.h contourdetector.h interestzone.h Websocketserver.h QWsSocket.h QWsServer.h QWsHandshake.h QWsFrame.h QTlsServer.h Client.h myevents.h usergui.h .tmp/face_detector1.0.0/ && $(COPY_FILE) --parents myrecognizer.cpp facedetectapp.cpp mvt_detection.cpp myqtgui.cpp colordetector.cpp contourdetector.cpp interestzone.cpp Websocketserver.cpp Client.cpp main.cpp myevents.cpp usergui.cpp .tmp/face_detector1.0.0/ && (cd `dirname .tmp/face_detector1.0.0` && $(TAR) face_detector1.0.0.tar face_detector1.0.0 && $(COMPRESS) face_detector1.0.0.tar) && $(MOVE) `dirname .tmp/face_detector1.0.0`/face_detector1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/face_detector1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_facedetectapp.cpp moc_myqtgui.cpp moc_Websocketserver.cpp moc_QWsSocket.cpp moc_QWsServer.cpp moc_QTlsServer.cpp moc_Client.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_facedetectapp.cpp moc_myqtgui.cpp moc_Websocketserver.cpp moc_QWsSocket.cpp moc_QWsServer.cpp moc_QTlsServer.cpp moc_Client.cpp
moc_facedetectapp.cpp: mainHeader.hpp \
		myevents.h \
		myrecognizer.hpp \
		interestzone.h \
		mvt_detection.h \
		myqtgui.h \
		colordetector.h \
		contourdetector.h \
		Websocketserver.h \
		QWsServer.h \
		QWsSocket.h \
		WsEnums.h \
		QWsHandshake.h \
		QWsFrame.h \
		QTlsServer.h \
		Client.h \
		usergui.h \
		facedetectapp.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) facedetectapp.h -o moc_facedetectapp.cpp

moc_myqtgui.cpp: mainHeader.hpp \
		myevents.h \
		interestzone.h \
		myqtgui.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) myqtgui.h -o moc_myqtgui.cpp

moc_Websocketserver.cpp: mainHeader.hpp \
		myevents.h \
		QWsServer.h \
		QWsSocket.h \
		WsEnums.h \
		QWsHandshake.h \
		QWsFrame.h \
		QTlsServer.h \
		Websocketserver.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) Websocketserver.h -o moc_Websocketserver.cpp

moc_QWsSocket.cpp: WsEnums.h \
		QWsHandshake.h \
		QWsFrame.h \
		QWsSocket.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) QWsSocket.h -o moc_QWsSocket.cpp

moc_QWsServer.cpp: QWsSocket.h \
		WsEnums.h \
		QWsHandshake.h \
		QWsFrame.h \
		QTlsServer.h \
		QWsServer.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) QWsServer.h -o moc_QWsServer.cpp

moc_QTlsServer.cpp: QWsSocket.h \
		WsEnums.h \
		QWsHandshake.h \
		QWsFrame.h \
		QTlsServer.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) QTlsServer.h -o moc_QTlsServer.cpp

moc_Client.cpp: QWsSocket.h \
		WsEnums.h \
		QWsHandshake.h \
		QWsFrame.h \
		Client.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) Client.h -o moc_Client.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean 

####### Compile

myrecognizer.o: myrecognizer.cpp myrecognizer.hpp \
		mainHeader.hpp \
		myevents.h \
		interestzone.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o myrecognizer.o myrecognizer.cpp

facedetectapp.o: facedetectapp.cpp facedetectapp.h \
		mainHeader.hpp \
		myevents.h \
		myrecognizer.hpp \
		interestzone.h \
		mvt_detection.h \
		myqtgui.h \
		colordetector.h \
		contourdetector.h \
		Websocketserver.h \
		QWsServer.h \
		QWsSocket.h \
		WsEnums.h \
		QWsHandshake.h \
		QWsFrame.h \
		QTlsServer.h \
		Client.h \
		usergui.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o facedetectapp.o facedetectapp.cpp

mvt_detection.o: mvt_detection.cpp mvt_detection.h \
		mainHeader.hpp \
		myevents.h \
		interestzone.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mvt_detection.o mvt_detection.cpp

myqtgui.o: myqtgui.cpp myqtgui.h \
		mainHeader.hpp \
		myevents.h \
		interestzone.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o myqtgui.o myqtgui.cpp

colordetector.o: colordetector.cpp colordetector.h \
		mainHeader.hpp \
		myevents.h \
		interestzone.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o colordetector.o colordetector.cpp

contourdetector.o: contourdetector.cpp contourdetector.h \
		mainHeader.hpp \
		myevents.h \
		interestzone.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o contourdetector.o contourdetector.cpp

interestzone.o: interestzone.cpp interestzone.h \
		mainHeader.hpp \
		myevents.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o interestzone.o interestzone.cpp

Websocketserver.o: Websocketserver.cpp Websocketserver.h \
		mainHeader.hpp \
		myevents.h \
		QWsServer.h \
		QWsSocket.h \
		WsEnums.h \
		QWsHandshake.h \
		QWsFrame.h \
		QTlsServer.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Websocketserver.o Websocketserver.cpp

Client.o: Client.cpp Client.h \
		QWsSocket.h \
		WsEnums.h \
		QWsHandshake.h \
		QWsFrame.h \
		ui_Client.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Client.o Client.cpp

main.o: main.cpp mainHeader.hpp \
		myevents.h \
		facedetectapp.h \
		myrecognizer.hpp \
		interestzone.h \
		mvt_detection.h \
		myqtgui.h \
		colordetector.h \
		contourdetector.h \
		Websocketserver.h \
		QWsServer.h \
		QWsSocket.h \
		WsEnums.h \
		QWsHandshake.h \
		QWsFrame.h \
		QTlsServer.h \
		Client.h \
		usergui.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

myevents.o: myevents.cpp myevents.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o myevents.o myevents.cpp

usergui.o: usergui.cpp usergui.h \
		mainHeader.hpp \
		myevents.h \
		interestzone.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o usergui.o usergui.cpp

moc_facedetectapp.o: moc_facedetectapp.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_facedetectapp.o moc_facedetectapp.cpp

moc_myqtgui.o: moc_myqtgui.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_myqtgui.o moc_myqtgui.cpp

moc_Websocketserver.o: moc_Websocketserver.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_Websocketserver.o moc_Websocketserver.cpp

moc_QWsSocket.o: moc_QWsSocket.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_QWsSocket.o moc_QWsSocket.cpp

moc_QWsServer.o: moc_QWsServer.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_QWsServer.o moc_QWsServer.cpp

moc_QTlsServer.o: moc_QTlsServer.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_QTlsServer.o moc_QTlsServer.cpp

moc_Client.o: moc_Client.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_Client.o moc_Client.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

